fullname: Django
description: 'Django assistant will help you create a basic Django project and install its dependencies.'

dependencies:
- rpm: [docker-io]

args:
  name:
    use: common_args

  github:
    use: github

  version:
    flags: [-v, --version]
    choices: ["1.6", "1.7"]
    help: Version of Django to use.
    default: "1.7"
    required: True

files:
  gitignore: &gitignore
    source: .gitignore
  dockerfile: &dockerfile
    source: Dockerfile
  wsgiconf: &wsgiconf
    source: wsgi.conf
  database: &database
    source: database/
  Vagrantfile: &Vagrantfile
    source: Vagrantfile
# TODO: when adding new, we need to add a conditional to run_startproject, since
#   there is no way to reference files dynamically (ATM)
  dj16projtemplate: &dj16projtemplate
    source: dj16projtemplate/
  dj17projtemplate: &dj17projtemplate
    source: dj17projtemplate/


run:
- setup_project_dir:
    from: $name
    topdir_normalized_var: topdir

- cl: cd "$contdir"

# kickstart the project and cd to it
- use: self.run_startproject
- cl: cd "$topdir"

# create dockerfiles and .devassistant file
- use: self.run_create_dockerfiles
- dda_c: .

# modify .devassistant file so that it installs correct deps and logs
#  correct message when it's prepped
- dda_w:
  - .
  - dependencies:
    - rpm: [docker-io]
    - pip: [vagrant]
    run:
    - log_i: 'To build images and create and start containers, run:'
    - $cwd~: $(pwd)
    - log_i: 'da tweak djangopoc django start -p $cwd'

# SCM related stuff
- cl: cp *gitignore .
- use: git.init_add_commit.run
- if defined $github:
  - github: create_and_push

# print instructions for user
- log_i: 'Django project $topdir in $contdir has been created.'
- log_i: 'To start development, use:'
- log_i: 'da tweak djangopoc django start -p $contdir/$topdir'
- log_i: 'This will build images and run containers in a proper way.'


run_startproject:
# render the project source files template
- $template: ""
- $djappdir: $(echo "dj${version}projtemplate" | tr -d ".")
- if $(["$version" == "1.6"]):
  - $template: *dj16projtemplate
- if $(["$version" == "1.7"]):
  - $template: *dj17projtemplate
- if not $template:
  - log_e: Critical assistant error, template not selected in run_startproject.

- jinja_render_dir:
    template: $template
    destination: $topdir
    data:
      topdir: $topdir
# rename the $topdir/djXYprojtemplate directory to $topdir/$topdir
- cl: mv "$topdir/$djappdir" "$topdir/$topdir"
- cl: chmod +x "$topdir/manage.py"

# render wsgi conf file
- jinja_render:
    template: *wsgiconf
    destination: $topdir
    output: $topdir.conf
    data:
      topdir: $topdir

# render Vagrantfile
- jinja_render:
    template: *Vagrantfile
    destination: $topdir
    data:
      topdir: $topdir


run_create_dockerfiles:
# webserver Dockerfile
- jinja_render:
    template: *dockerfile
    destination: .
    data:
      topdir: $topdir

# DB server Dockerfile and helper script
- cl: mkdir database
- jinja_render_dir:
    template: *database
    destination: ./database
    data:
      name: $topdir
